do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v67=v2(v0(v29,16));if v18 then local v76=v5(v67,v18);v18=nil;return v76;else return v67;end end end);local function v19(v30,v31,v32)if v32 then local v68=(v30/((2 + 0)^(v31-(1750 -(1339 + 410)))))%(((744 -(50 + 287)) -(208 + 197))^(((v32-(254 -(106 + 147))) -(v31-(1356 -(888 + 467)))) + 1 + 0));return v68-(v68%(1 + 0));else local v69=0 + 0 + 0;local v70;while true do if (v69==(0 + 0)) then v70=(1642 -(503 + 1137))^(v31-(1837 -(641 + 1195)));return (((v30%(v70 + v70))>=v70) and (1 + 0)) or ((0 + 0) -0);end end end end local function v20()local v37=0 + 0 + 0;local v38;while true do if (v37==(1042 -(258 + 784))) then v38=v1(v15,v17,v17);v17=v17 + 1 + 0;v37=1633 -(608 + 1024);end if (v37==1) then return v38;end end end local function v21()local v39=0 -0;local v40;local v41;while true do if ((0 -0)==v39) then v40,v41=v1(v15,v17,v17 + (1998 -(110 + 1886)));v17=v17 + (4 -2);v39=1 + 0;end if (v39==((3 -2) + 0)) then return (v41 * (572 -316)) + v40;end end end local function v22()local v42=(1637 -791) -(58 + 788);local v43;local v44;local v45;local v46;while true do if (v42==(1971 -(1255 + 716))) then v43,v44,v45,v46=v1(v15,v17,v17 + 2 + 1);v17=v17 + (14 -10);v42=810 -(14 + 795);end if (v42==((4 -1) -(1 + 1))) then return (v46 * 16777216) + (v45 * (66695 -(1028 + 131))) + (v44 * (2131 -(383 + (2326 -834)))) + v43;end end end local function v23()local v47=(1070 -(397 + 550)) -(85 + 38);local v48;local v49;while true do if (v47==(0 -0)) then v48=v22();v49=v22();v47=1 -0;end if (v47==(513 -(357 + (1998 -(1281 + 562))))) then return (( -(9 -(7 + 0)) * v19(v49,1176 -((862 -(769 + 3)) + 1054))) + (139 -(56 + 82))) * (((6 -2) -2)^(v19(v49,70 -49,15 + 2 + 14) -1023)) * ((((v19(v49,1,13 + 7) * (2^(62 -30))) + v48)/((995 -(438 + 555))^(46 + 6))) + (3 -2));end end end local function v24(v33)local v50;if  not v33 then v33=v22();if (v33==(0 -0)) then return "";end end v50=v3(v15,v17,(v17 + v33) -(1 -0));v17=v17 + v33;local v51={};for v65=111 -(19 + 91), #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if ((5 -2)~=v52) then else v59=nil;v60=nil;v52=1 + 3;end if ((0 -0)==v52) then v53=0 + 0;v54=nil;v52=1;end if (v52~=(351 -(31 + 318))) then else v57=nil;v58=nil;v52=3;end if (v52==(413 -(243 + 169))) then v55=nil;v56=nil;v52=2;end if ((1199 -(286 + 909))==v52) then v61=nil;while true do if (v53~=4) then else while true do if (v54==2) then local v100=0;local v101;while true do if (v100~=(0 -0)) then else v101=0 -0;while true do if (v101==1) then v54=1501 -(971 + 527);break;end if (v101~=(1016 -(356 + 660))) then else v59=nil;v60=nil;v101=1;end end break;end end end if (v54==1) then local v102=1558 -(740 + 818);local v103;while true do if (v102~=(1164 -(1062 + 102))) then else v103=0 -0;while true do if (v103~=1) then else v54=2;break;end if (v103==0) then local v109=0 + 0;while true do if (v109~=1) then else v103=1 -0;break;end if (v109==(0 + 0)) then v57=nil;v58=nil;v109=201 -(22 + 178);end end end end break;end end end if (v54~=0) then else local v104=0;while true do if (v104~=(0 -0)) then else v55=1827 -(1416 + 411);v56=nil;v104=1 + 0;end if (v104~=1) then else v54=1;break;end end end if (v54==3) then v61=nil;while true do local v105=0;local v106;local v107;while true do if ((0 -0)~=v105) then else v106=0 -0;v107=nil;v105=1;end if (v105~=1) then else while true do if ((0 -0)==v106) then v107=1325 -(236 + 1089);while true do if ((1975 -(1944 + 31))==v107) then local v111=0;local v112;while true do if ((1972 -(876 + 1096))==v111) then v112=0;while true do if (v112~=1) then else v107=1;break;end if (0~=v112) then else if (v55~=(1485 -(261 + 1223))) then else local v221=0 + 0;local v222;while true do if (v221==(0 -0)) then v222=740 -(708 + 32);while true do if (v222==(691 -(591 + 100))) then local v285=0;local v286;while true do if (v285==(0 + 0)) then v286=0 + 0;while true do if (v286==(1262 -(988 + 273))) then v222=1 -0;break;end if (v286~=(0 -0)) then else v60=v22();v61={};v286=2 -1;end end break;end end end if (v222~=2) then else v55=2;break;end if (v222~=(1 -0)) then else local v287=0;local v288;while true do if (v287~=0) then else v288=0;while true do if (v288~=(648 -(174 + 473))) then else v222=2;break;end if (v288~=(255 -(233 + 22))) then else local v351=0;while true do if (v351==(1938 -(1039 + 899))) then for v366=2 -1,v60 do local v367=0 + 0;local v368;local v369;local v370;local v371;local v372;while true do if (v367==0) then v368=0;v369=nil;v367=1 -0;end if (v367==1) then v370=nil;v371=nil;v367=1048 -(643 + 403);end if (v367~=(311 -(95 + 214))) then else v372=nil;while true do if (1~=v368) then else v371=nil;v372=nil;v368=2;end if (v368==(0 -0)) then local v409=0 + 0;while true do if (v409==(1979 -(727 + 1252))) then v369=0;v370=nil;v409=1;end if ((1 -0)==v409) then v368=1 + 0;break;end end end if (v368~=(2 -0)) then else while true do if (v369~=(0 + 0)) then else local v418=0;while true do if (v418~=0) then else v370=0 -0;v371=nil;v418=616 -(456 + 159);end if (v418==1) then v369=3 -2;break;end end end if (v369~=1) then else v372=nil;while true do if (v370==(1 + 0)) then if (v371==(1 -0)) then v372=v20()~=(1895 -(654 + 1241));elseif (v371==(2 -0)) then v372=v23();elseif (v371~=(1 + 2)) then else v372=v24();end v61[v366]=v372;break;end if (v370==0) then local v427=0;local v428;while true do if (v427==0) then v428=0 + 0;while true do if (v428~=0) then else local v433=0 -0;while true do if ((1 + 0)~=v433) then else v428=542 -(302 + 239);break;end if (v433~=(0 -0)) then else v371=v20();v372=nil;v433=1 -0;end end end if (v428~=1) then else v370=1 + 0;break;end end break;end end end end break;end end break;end end break;end end end v59[2 + 1]=v20();v351=1 + 0;end if (v351==1) then v288=1;break;end end end end break;end end end end break;end end end if (0==v55) then local v223=0 + 0;local v224;local v225;while true do if (v223==(2 -1)) then while true do if (v224==(0 -0)) then v225=0 -0;while true do if (v225==2) then v55=4 -3;break;end if ((398 -(77 + 320))==v225) then local v318=0 + 0;while true do if ((1878 -(1017 + 860))==v318) then v225=2;break;end if ((130 -(122 + 8))~=v318) then else v58={};v59={v56,v57,nil,v58};v318=738 -(716 + 21);end end end if (v225~=(969 -(862 + 107))) then else local v319=0;local v320;while true do if (v319==(0 + 0)) then v320=1109 -(917 + 192);while true do if (v320~=0) then else local v358=369 -(187 + 182);while true do if (v358==0) then v56={};v57={};v358=2 -1;end if (v358~=(1 -0)) then else v320=1 + 0;break;end end end if (v320~=(1466 -(1392 + 73))) then else v225=1;break;end end break;end end end end break;end end break;end if (0~=v223) then else v224=0;v225=nil;v223=1 + 0;end end end v112=1;end end break;end end end if (v107==(1 -0)) then if (2==v55) then local v115=0 -0;local v116;while true do if (v115~=(0 -0)) then else v116=1923 -(1179 + 744);while true do if ((1 + 0)~=v116) then else local v226=501 -(291 + 210);local v227;while true do if (v226==(437 -(128 + 309))) then v227=0;while true do if (v227~=(0 -0)) then else local v289=0 + 0;while true do if (v289==0) then for v335=1,v22() do v58[v335]=v22();end return v59;end end end end break;end end end if (v116==(0 + 0)) then local v228=0 + 0;while true do if ((3 -2)==v228) then v116=1 + 0;break;end if (v228==0) then for v257=1,v22() do local v258=0;local v259;local v260;local v261;while true do if (0==v258) then v259=1503 -(1083 + 420);v260=nil;v258=825 -(58 + 766);end if (v258~=(1 + 0)) then else v261=nil;while true do if (0~=v259) then else local v337=506 -(41 + 465);while true do if (v337~=(0 + 0)) then else v260=0 + 0;v261=nil;v337=2 -1;end if (v337~=1) then else v259=1 + 0;break;end end end if (v259==(975 -(746 + 228))) then while true do if (v260~=0) then else v261=v20();if (v19(v261,1,1)~=(1950 -(181 + 1769))) then else local v359=0 + 0;local v360;local v361;local v362;local v363;while true do if (v359~=1) then else local v382=0 -0;local v383;while true do if (v382~=(0 + 0)) then else v383=0 -0;while true do if (v383==0) then local v416=0;while true do if (v416==(755 -(449 + 306))) then v362=nil;v363=nil;v416=828 -(284 + 543);end if (v416==1) then v383=1;break;end end end if (v383~=(3 -2)) then else v359=2;break;end end break;end end end if (v359==(2 + 0)) then while true do if (v360==0) then local v401=830 -(343 + 487);local v402;while true do if (v401~=0) then else v402=0;while true do if (v402==(499 -(27 + 471))) then v360=2 -1;break;end if (v402==(0 -0)) then local v422=0 + 0;local v423;while true do if (v422~=0) then else v423=0;while true do if (v423~=(643 -(358 + 284))) then else v402=1;break;end if (v423==0) then local v432=0 -0;while true do if ((0 -0)~=v432) then else v361=v19(v261,9 -7,3);v362=v19(v261,1473 -(920 + 549),1045 -(282 + 757));v432=3 -2;end if (v432==1) then v423=1;break;end end end end break;end end end end break;end end end if (v360==2) then local v403=0 -0;local v404;local v405;while true do if (v403==(0 + 0)) then v404=0 + 0;v405=nil;v403=1;end if (v403~=(3 -2)) then else while true do if (v404~=0) then else v405=0;while true do if (v405~=(450 -(89 + 360))) then else v360=205 -(134 + 68);break;end if (v405~=(0 + 0)) then else local v430=0 -0;local v431;while true do if (v430==0) then v431=0;while true do if (v431==0) then local v436=272 -(255 + 17);while true do if (v436==1) then v431=1;break;end if (v436==0) then if (v19(v362,1,1)~=1) then else v363[2]=v61[v363[2 -0]];end if (v19(v362,2,2)==(953 -(837 + 115))) then v363[3]=v61[v363[3]];end v436=1 + 0;end end end if (v431~=1) then else v405=1506 -(287 + 1218);break;end end break;end end end end break;end end break;end end end if (3==v360) then if (v19(v362,3,1 + 2)~=(343 -(177 + 165))) then else v363[4]=v61[v363[4]];end v56[v257]=v363;break;end if (v360==(1856 -(1271 + 584))) then local v407=1004 -(999 + 5);local v408;while true do if (v407~=0) then else v408=0 -0;while true do if (v408==0) then local v424=0 + 0;local v425;while true do if (0~=v424) then else v425=0;while true do if (0~=v425) then else v363={v21(),v21(),nil,nil};if (v361==0) then local v434=0;local v435;while true do if (v434==(878 -(810 + 68))) then v435=0;while true do if ((0 + 0)==v435) then v363[4 -1]=v21();v363[1609 -(87 + 1518)]=v21();break;end end break;end end elseif (v361==(1 + 0)) then v363[1703 -(1235 + 465)]=v22();elseif (v361==2) then v363[377 -(67 + 307)]=v22() -(2^(1510 -(247 + 1247)));elseif (v361~=(3 + 0)) then else local v445=0;local v446;while true do if (v445~=(0 -0)) then else v446=0;while true do if (v446~=(0 + 0)) then else v363[440 -(185 + 252)]=v22() -((2 + 0)^16);v363[4]=v21();break;end end break;end end end v425=1;end if (v425==(3 -2)) then v408=1;break;end end break;end end end if (1==v408) then v360=5 -3;break;end end break;end end end end break;end if (v359==(0 + 0)) then local v384=0 -0;local v385;while true do if (v384==0) then v385=1456 -(35 + 1421);while true do if (v385~=1) then else v359=1;break;end if (v385~=0) then else local v417=0;while true do if (v417==0) then v360=0;v361=nil;v417=1 + 0;end if (v417==(1 + 0)) then v385=1;break;end end end end break;end end end end end break;end end break;end end break;end end end for v262=3 -2,v22() do v57[v262-1]=v27();end v228=4 -3;end end end end break;end end end break;end end break;end end break;end end end break;end end break;end if (v53==(0 -0)) then local v92=0;while true do if (v92~=(1 + 0)) then else v53=1 + 0;break;end if (0~=v92) then else v54=0;v55=nil;v92=374 -(344 + 29);end end end if (v53~=(1 + 0)) then else local v93=0;while true do if (0~=v93) then else v56=nil;v57=nil;v93=3 -2;end if (1~=v93) then else v53=618 -(124 + 492);break;end end end if (v53~=2) then else local v94=0;while true do if (v94~=1) then else v53=10 -7;break;end if (v94==0) then v58=nil;v59=nil;v94=1;end end end if (v53~=(1 + 2)) then else local v95=0;while true do if (v95~=1) then else v53=4;break;end if (v95~=(0 -0)) then else v60=nil;v61=nil;v95=1;end end end end break;end end end local function v28(v34,v35,v36)local v62=v34[1];local v63=v34[2];local v64=v34[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v11("#",...) -1;local function v75()local v77=v62;local v78=v63;local v79=v64;local v80=v26;local v81={};local v82={};local v83={};for v88=461 -((142 -77) + 396),v74 do if (((2468 + 813)>(933 + 1510)) and (v88>=v79)) then v81[v88-v79]=v73[v88 + 1 + 0];else v83[v88]=v73[v88 + 1];end end local v84=(v74-v79) + 1 + 0;local v85;local v86;while true do local v89=0;local v90;local v91;while true do if (((114 + 49)<=(11811 -7746)) and (v89==(0 + 0))) then v90=0 -0;v91=nil;v89=1 + 0;end if ((v89==(1 + 0)) or ((31 + 1427)>=(6456 -2930))) then while true do if (((376 + 1946)>(2552 -951)) and (v90==(0 -0))) then v91=1823 -(398 + 1425);while true do if ((3762>=2482) and ((1 + 0)==v91)) then if (((5123 -(315 + 177))>=3548) and (v86<=(79 -59))) then if (((3742 -(428 + 1123))<(12225 -8246)) and (v86<=(811 -(724 + 78)))) then if ((1463<=(804 + 2191)) and (v86<=4)) then if ((v86<=(3 -2)) or ((6879 -2049)<(4799 -(43 + 11 + 185)))) then if ((v86==((733 -(20 + 110)) -(538 + 65))) or ((863 + 86)>(1358 + 696))) then v83[v85[2 + 0]]=v83[v85[3]][v85[4]];else local v119=(4034 -2735) -(667 + 632);local v120;local v121;local v122;local v123;while true do if ((2119>=(1452 -((2107 -(621 + 991)) + 22))) and (v119==(93 -(78 + 15)))) then v120=733 -(319 + 414);v121=nil;v119=1 + 0 + 0;end if (((5955 -(1183 + 529))>(1138 + 2299)) and (v119==(1 -0))) then v122=nil;v123=nil;v119=2;end if (((897 + (4083 -(280 + 566)))<=(9630 -5309)) and (v119==(2 + 0))) then while true do if ((v120==1) or ((5632 -((1066 -(392 + 222)) + 479))<4550)) then v123=1604 -(1519 + 85);for v264=v121,v85[4] do local v265=0;local v266;while true do if (((3567 -2704)<(3937 -(5111 -3420))) and (v265==(1779 -(528 + 1251)))) then v266=709 -(247 + 462);while true do if ((1100<=(4260 -(153 + 53))) and (v266==(0 -0))) then v123=v123 + 1 + 0;v83[v264]=v122[v123];break;end end break;end end end break;end if ((v120==0) or ((3793 -((922 -(160 + 434)) + 310))<=2421)) then v121=v85[(6 -4) + 0];v122={v83[v121](v12(v83,v121 + 1 + (0 -0),v72))};v120=1409 -(253 + 1155);end end break;end end end elseif ((v86<=(1 + 1)) or ((2871 -(910 + 541))>1481)) then v35[v85[768 -(170 + 595)]]=v83[v85[2]];elseif ((v86==3) or ((54 + 1003)==(4091 -(71 + 231)))) then local v164=1753 -(1388 + 365);local v165;local v166;local v167;local v168;while true do if (((411 + 38 + 404)==853) and (v164==(0 -0))) then v165=0;v166=nil;v164=319 -(255 + 63);end if (((7132 -2221)==(21376 -16465)) and (v164==1)) then v167=nil;v168=nil;v164=1858 -(177 + 1679);end if (((3398 -2255)<=1385) and (v164==2)) then while true do if (((1186 + (2284 -1698))>=((46 -20) + 283)) and (v165==(1 + 0))) then v168=v83[v166 + 1 + 1];if (((1757 -(132 + 1559))<(2590 -(45 + 173))) and (v168>(0 -0))) then if ((v167>v83[v166 + (837 -((430 -278) + 684))]) or ((1011 + 1862)==(130 + 611 + 553))) then v71=v85[3];else v83[v166 + 3 + 0]=v167;end elseif ((v167<v83[v166 + (1705 -((52 -38) + 1690))]) or ((408 -(1645 -(138 + 1364)))>(8430 -4863))) then v71=v85[3 -0];else v83[v166 + ((755 -(428 + 320)) -4)]=v167;end break;end if ((v165==0) or ((4073 -(549 + 22 + 134))==(1074 + 1448))) then local v275=448 -(351 + 97);while true do if (((18789 -14433)<(10733 -5954)) and (v275==((975 -372) -(129 + 474)))) then v166=v85[1987 -(1190 + 380 + 415)];v167=v83[v166];v275=1 + 0;end if (((4096 -(767 + 1189))<(7877 -3196)) and (v275==(1 -0))) then v165=1;break;end end end end break;end end else v83[v85[(25 -16) -7]]=v83[v85[3]] -v85[13 -9];end elseif ((v86<=(2 + 4)) or ((5163 -(1467 + 28))>((35021 -19323) -11650))) then if ((v86==5) or ((14139 -9252)<=(425 + 1094))) then local v126=0;local v127;local v128;local v129;local v130;while true do if (((737 -(150 + 218))<=(9352 -6102)) and (v126==(1057 -(977 + 80)))) then v127=0 + 0;v128=nil;v126=444 -((1338 -(146 + 876)) + 127);end if (((3511 -(564 + 478))==((8023 -(1497 + 156)) -3901)) and (v126==1)) then v129=nil;v130=nil;v126=7 -5;end if ((v126==2) or (4620<((2478 -(535 + 770)) + 805))) then while true do if (((10497 -5601)==(6173 -(175 + 1102))) and (v127==(0 + 0))) then local v241=0;while true do if ((((1311 -(218 + 196)) + (1384 -421))>=(2726 -1788)) and (v241==(567 -(508 + 59)))) then v128=v85[1186 -(291 + 893)];v129=v83[v128 + 2];v241=1;end if (((9264 -6164)<=4244) and (v241==(2 -1))) then v127=1 -0;break;end end end if ((v127==(2 + 0)) or ((9434 -6585)==(3485 -(327 + 24 + 57)))) then if ((v129>0) or (3532==(3039 -1636))) then if (((4046 -(99 + 19))<(5487 -(551 + 754))) and (v130<=v83[v128 + (1975 -(1599 + 375)) + 0])) then local v297=576 -((1416 -(611 + 457)) + 228);local v298;while true do if (((4629 -(641 + 358))>=(12789 -9271)) and (v297==0)) then v298=119 -(7 + 112);while true do if ((v298==(311 -(56 + 255))) or ((17 + 3135)<=(1822 -1188))) then v71=v85[3];v83[v128 + 3]=v130;break;end end break;end end end elseif ((v130>=v83[v128 + (3 -2)]) or ((1613 -(370 + (2191 -1393)))==(3954 -(158 + 450)))) then local v299=0 + 0;local v300;local v301;while true do if ((((9367 -4688) -(52 + 676))>3902) and (v299==(0 -0))) then v300=(358 + 496) -(764 + 90);v301=nil;v299=120 -(80 + 39);end if ((v299==(1 -0)) or ((256 + 344)==736)) then while true do if ((v300==0) or ((3918 -(1144 + 742))<=(2110 -(1452 + 49)))) then v301=0;while true do if ((((9232 -(991 + 399)) -4888)<3509) and ((0 -0)==v301)) then v71=v85[(3404 -(11 + 1431)) -(1904 + 55)];v83[v128 + 3 + 0]=v130;break;end end break;end end break;end end end break;end if ((((2 -1) + (547 -(267 + 280)))==v127) or ((4755 -1193)==2485)) then local v242=0 + 0;while true do if (((0 -0)==v242) or ((6223 -4038)>(1206 + 3256))) then v130=v83[v128] + v129;v83[v128]=v130;v242=1878 -(1738 + 139);end if (((1176 + 2036)>3024) and (v242==((7 -5) -1))) then v127=2 + 0;break;end end end end break;end end else v83[v85[2 + 0]]= #v83[v85[3]];end elseif ((v86<=7) or ((118 + 381)>=(1509 -(541 + 125)))) then v83[v85[2]]=v85[2 + 1]~=(961 -(370 + 591));elseif (((372 + 849)<=(5555 -2867)) and (v86>(795 -(185 + 426 + 176)))) then v83[v85[2 -0]]={};else local v171=0;local v172;local v173;local v174;local v175;local v176;local v177;while true do if (((6528 -(1234 + 710))>=(3038 -1017)) and (v171==(4 -3))) then v174=nil;v175=nil;v171=2 + 0;end if ((v171==(5 -3)) or ((274 + (9808 -7171))<=648)) then v176=nil;v177=nil;v171=3;end if (((2806 + 797)>2627) and (v171==(325 -(117 + 205)))) then while true do if ((v172==3) or ((15705 -11620)<3677)) then if (((6665 -(687 + 1200))>=(2021 + 385)) and v177) then local v302=0;while true do if ((v302==(1104 -(1008 + 96))) or ((4022 -(1736 + 131))==2394)) then v83[v175]=v177;v71=v85[2 + 1];break;end end else v71=v71 + (351 -(158 + 192)) + 0;end break;end if (((3936 -(423 + 762))<(2338 + 899 + 1005)) and (v172==(1775 -(851 + 924)))) then local v276=0 -0;while true do if (((1756 -(747 + 1008))==v276) or (4371<(2810 + 115))) then v172=844 -(656 + 187);break;end if (((2908 + 1877)==(5041 -(164 + 92))) and (v276==(0 + 0))) then v173=v85[2];v174=v85[264 -(124 + 136)];v276=924 -(17 + 906);end end end if (((2 -1)==v172) or ((816 -(1611 -1149))>(8243 -5307))) then local v277=1482 -(211 + 1271);while true do if ((0==v277) or (((13760 -10432) -(123 + 1598))<(661 -(167 + 9 + 56)))) then v175=v173 + 1 + 1;v176={v83[v173](v83[v173 + (3 -2)],v83[v175])};v277=(287 + 1632) -(1500 + 418);end if ((((3737 -2179) + 409)>=(1562 -(1101 + 55))) and (v277==(753 -(336 + 416)))) then v172=2 -(0 -0);break;end end end if ((3643==3643) and (v172==(3 -(1 -0)))) then local v278=0 + 0;while true do if ((v278==1) or ((2730 -2037)>((1236 -(323 + 36)) + 2654))) then v172=8 -5;break;end if ((v278==(1046 -(652 + 394))) or ((1915 -(225 + 175))>(1854 + 795))) then for v325=1 -0,v174 do v83[v175 + v325]=v176[v325];end v177=v176[2 -1];v278=1920 -(1314 + 605);end end end end break;end if (((4252 -((1708 -(591 + 113)) + 867))>=79) and (v171==(0 + 0))) then v172=0 -(227 -(181 + 46));v173=nil;v171=3 -2;end end end elseif ((v86<=(7 + 7)) or ((1885 -((1960 -911) + 352))>(836 + 3698))) then if (((1557 + 34)<=4314) and (v86<=(2 + 9))) then if ((v86>(1676 -(561 + 1105))) or ((5690 -2048)<=2937)) then v83[v85[2 + 0]]=v83[v85[2 + (1046 -(968 + 77))]] + v85[(1 -0) + 3];else local v134=0 -0;local v135;local v136;local v137;while true do if ((v134==(0 + 0)) or ((4104 -(211 + 1542))==(2441 -(1445 + 498)))) then v135=930 -((2581 -1917) + 266);v136=nil;v134=1;end if ((v134==(1204 -(934 + 269))) or ((3656 + 470)<=(4852 -3791))) then v137=nil;while true do if ((v135==0) or ((2101 -1243)<=(1155 -(729 + 16)))) then v136=v85[1 + 1];v137=v83[v85[14 -11]];v135=1;end if (((1557 + 188)==(39 + (4531 -2825))) and (v135==1)) then v83[v136 + 1 + 0]=v137;v83[v136]=v137[v85[(806 -(196 + 609)) + (7 -4)]];break;end end break;end end end elseif (((169 + 210)==((186 + 631) -438)) and (v86<=(511 -(433 + 66)))) then v36[v85[4 -1]]=v83[v85[2]];elseif ((v86==13) or ((4158 + 166)<(3951 -(52 + 5)))) then v83[v85[4 -2]][v85[66 -(8 + 55)]]=v85[(1739 -808) -(672 + 60 + 195)];else local v180=0 -0;local v181;local v182;local v183;while true do if (((2112 -(756 + (2087 -(438 + 1118))))<(3888 + 164)) and (v180==(1 + 0))) then v183=nil;while true do if (((978 + 506)<=2046) and (v181==(1 + 0))) then while true do if (((2027 -(787 + 689))<(2893 + 386)) and (v182==(0 + 0))) then v183=v85[66 -(48 + 16)];v83[v183](v83[v183 + (1824 -(677 + 1146))]);break;end end break;end if (((3787 -(515 + 290))<((9136 -(90 + 79)) -5888)) and (v181==(0 + 0))) then local v279=0 -0;while true do if ((4578>=(3667 -831)) and (v279==(0 + (1911 -(279 + 1632))))) then v182=0;v183=nil;v279=38 -((1358 -(449 + 873)) + 1);end if ((3299<3867) and (v279==((3 + 1) -3))) then v181=1 + 0;break;end end end end break;end if ((((13131 -8100) -(216 + 33))==((4501 -(646 + 276)) + 1203)) and (0==v180)) then v181=0 + 0;v182=nil;v180=1 -0;end end end elseif ((v86<=(2 + 8 + 7)) or ((4200 + 432)<(2258 -1589))) then if (((1593 -(201 + 42 + 226))<(84 + 1935)) and (v86<=(893 -((1264 -552) + (759 -(305 + 288)))))) then v83[v85[(517 + 1465) -(1745 + 235)]]=v83[v85[1427 -(509 + 915)]];elseif ((3803>(3462 -(117 + 46))) and (v86==(15 + 1))) then if (((11344 -6581)>(9898 -(5141 + 721))) and (v83[v85[776 -((1068 -644) + (376 -(18 + 8)))]]==v85[9 -5])) then v71=v71 + 1;else v71=v85[3];end else local v184=0;local v185;local v186;while true do if ((v184==((1166 + 400) -(322 + 1243))) or ((407 + 1595)>=(2391 + 407))) then while true do if ((v185==(649 -(313 + 336))) or ((62 + 2461)>4717)) then v186=v85[6 -4];v83[v186]=v83[v186](v83[v186 + 1]);break;end end break;end if ((v184==(0 + 0 + 0)) or (((34788 -21573) -(3047 + 5404))<(283 + 1538))) then v185=0 -0;v186=nil;v184=1 -0;end end end elseif ((v86<=(11 + 7)) or ((5618 -(932 + 1056))<(2717 -1659))) then if ((3645==((1444 + 6205) -4004)) and (v83[v85[865 -(454 + 7 + 402)]]~=v85[8 -4])) then v71=v71 + (899 -(148 + 750));else v71=v85[(2 + 2) -1];end elseif ((((391 -195) + 2267)>=(3527 -(791 + 421))) and (v86==(12 + 7))) then if ((v85[7 -5]==v83[v85[1273 -(548 + 721)]]) or (2748<416)) then v71=v71 + ((1 + 2) -2);else v71=v85[749 -(678 + 68)];end else for v229=v85[(3199 -1765) -(115 + 1317)],v85[1 + 2] do v83[v229]=nil;end end elseif (((2315 -(597 + 740))<=(2659 -1263)) and (v86<=(220 -(186 + 4)))) then if ((v86<=(118 -(381 -288))) or ((1949 + 1935)<=(3918 -2561))) then if ((1901<=(4529 -1940)) and (v86<=(1477 -(1208 + 247)))) then if ((v86==(959 -((428 -219) + 729))) or ((168 + 1728)==(464 + 2891))) then local v142=1441 -(776 + 665);local v143;local v144;local v145;local v146;local v147;while true do if ((((2218 -(252 + 1058)) + 730)<=(6373 -(718 + (1500 -699)))) and (v142==(1 + (1030 -(918 + 112))))) then v145=nil;v146=nil;v142=1 + 1;end if ((v142==(0 + 0)) or ((1849 + 449)>=(4122 -(540 + 163)))) then v143=0 + 0;v144=nil;v142=673 -(402 + 270);end if (((5525 -3237)<(533 + 2577)) and ((2 + 0)==v142)) then v147=nil;while true do if ((v143==(1477 -(460 + 1016))) or ((541 + 451)>=(358 + 2352))) then local v248=0 + 0;while true do if (((2152 + (2348 -534))>(3611 -2046)) and (v248==(0 + 0))) then v72=(v146 + v144) -(1581 -(1172 + 408));v147=0 -0;v248=2 -(1 -0);end if (((5788 -2260)==(1799 + 1729)) and (v248==(1 + 0))) then v143=2 -0;break;end end end if (((265 -(19 + 35))>(31 -8)) and (v143==(2 + 0))) then for v267=v144,v72 do local v268=0;local v269;while true do if ((4246>=(317 -(9 + 2))) and ((0 + 0)==v268)) then v269=0 + 0;while true do if ((v269==(1755 -(1381 + (717 -343)))) or ((3971 -3171)>=(7895 -3062))) then v147=v147 + (4 -3);v83[v267]=v145[v147];break;end end break;end end end break;end if (((0 -0)==v143) or ((2215 -1735)==(3096 + 1178))) then local v249=0 -0;while true do if (((5642 -3695)==(1225 + 722)) and (v249==0)) then v144=v85[2];v145,v146=v80(v83[v144](v83[v144 + (1 -0)]));v249=(1196 -(1101 + 94)) -0;end if (((5495 -2143)<3436) and (v249==(2 -(1 + 0)))) then v143=498 -(327 + (725 -555));break;end end end end break;end end else v83[v85[1 + 1 + 0]]=v36[v85[4 -1]];end elseif ((v86<=(42 -19)) or ((3948 -(41 + 1696))<=(1739 -(585 + (406 -(252 + 153)))))) then do return;end elseif ((v86>(15 + 9)) or ((903 + 906)==1080)) then local v188=939 -(87 + 100 + (2393 -1641));local v189;local v190;local v191;local v192;while true do if (((4701 -(818 + 53))>=(8017 -5952)) and (v188==(1376 -((940 -(152 + 548)) + 1135)))) then v191=nil;v192=nil;v188=1 + 1;end if ((v188==(821 -(531 + 288))) or ((6827 -4590)>=(6194 -3410))) then while true do if (((1930 + 2312)>=503) and (v189==(0 + 0))) then local v282=0 -0;while true do if (((2959 + 1448)>1430) and (v282==(0 -0))) then v190=0 + 0;v191=nil;v282=1 + 0;end if ((v282==(2 -1)) or ((2005 -965)==(6875 -(5103 -2333)))) then v189=1503 -(1086 + 416);break;end end end if ((v189==(1 + 0)) or (974>=(3410 -(411 + 1067)))) then v192=nil;while true do if ((773<1232) and (v190==(1 -0))) then for v328=v191 + 1 + 0,v85[473 -(358 + 112)] do v7(v192,v83[v328]);end break;end if ((2045>705) and (v190==0)) then local v309=0;local v310;while true do if ((2778>(853 + 446 + 1356)) and (v309==(0 + 0))) then v310=1784 -(81 + 1703);while true do if ((v310==1) or (((10976 -5098) -(300 + 1228))==(7752 -4655))) then v190=2 -1;break;end if (((2428 -(1304 + 66))==((2068 -(257 + 1618)) + 865)) and ((979 -((837 -318) + 460))==v310)) then local v354=0 -0;while true do if ((2643==(1233 + 1410)) and (v354==(956 -(819 + 137)))) then v191=v85[2];v192=v83[v191];v354=1 -0;end if ((1594<4840) and (v354==1)) then v310=150 -(12 + 137);break;end end end end break;end end end end break;end end break;end if ((((544 -384) + 2581)>=(1297 + 1391)) and (v188==(0 + 0))) then v189=0 -(0 -0);v190=nil;v188=1 -0;end end else local v193=0 + 0;local v194;local v195;local v196;local v197;while true do if (((435 + 79)<=(390 + 450)) and (v193==(1 + 0))) then v196=nil;v197=nil;v193=(122 -(4 + 116)) + 0;end if ((v193==(2 + 0)) or ((448 + 911 + 222)>=(13006 -8136))) then while true do if ((v194==(1218 -(989 + 228))) or ((1055 -(196 + 233))<=(1129 -659))) then v197=v85[288 -((636 -501) + 150)];for v294=1589 -(681 + 907),v197 do v196[v294]=v83[v195 + v294];end break;end if ((v194==(365 -(185 + 180))) or ((3177 -2203)<(1339 -(186 + 371)))) then local v284=0 -(0 + 0);while true do if ((v284==(0 + 0 + 0)) or (((6827 -2235) -(271 + 1295))<=(279 + (2965 -(249 + 285))))) then v195=v85[814 -(72 + (1117 -377))];v196=v83[v195];v284=1 + 0;end if ((v284==(1 + 0)) or ((1203 + 2731 + 27)<=(392 -131))) then v194=2 -1;break;end end end end break;end if ((v193==(0 + (845 -(446 + 399)))) or ((3677 -922)>=((1012 + 3789) -(564 + 207)))) then v194=0;v195=nil;v193=1 + 0;end end end elseif (((155 + 357)>=(948 -557)) and (v86<=(220 -(37 + (406 -250))))) then if (((431 + 1644)<=(5077 -(923 + 506))) and (v86>(6 + 20))) then if (v83[v85[2 + 0]] or ((1131 + 1734)>3402)) then v71=v71 + 1 + 0;else v71=v85[3 -(0 + 0)];end elseif ( not v83[v85[2]] or ((1828 + 1373)<=(1975 + 456))) then v71=v71 + (351 -(326 + 24));else v71=v85[3 + 0];end elseif (((4862 -3528)>169) and (v86<=(71 -43))) then v71=v85[916 -(90 + 823)];elseif (((1529 + 2037)>=(2690 -(1181 + 576))) and (v86>(1331 -((1336 -(112 + 444)) + 522)))) then v83[v85[1013 -(531 + 480)]][v85[3]]=v83[v85[8 -(1 + 3)]];else local v202=0;local v203;local v204;local v205;local v206;local v207;while true do if (((2 + 0 + 0)==v202) or ((2999 -1869)>=(2076 -(91 + 117)))) then v207=nil;while true do if (((16319 -11747)>(1026 + 2328)) and (v203==1)) then v206=nil;v207=nil;v203=8 -6;end if (((570 + 3320)>=3140) and ((2 + 0)==v203)) then while true do if ((v204==(0 -0)) or ((27 + 1910)>=(815 + 798 + 1921))) then local v313=0 -0;local v314;while true do if ((v313==0) or ((4070 -2442)==(4350 -(1058 + 22)))) then v314=1242 -(98 + 1144);while true do if (((211 + 2040)==((2857 + 2941) -3547)) and (v314==(0 + 0))) then local v355=0 -0;while true do if (((4838 -(275 + 10))>2211) and (v355==(2 -1))) then v314=1;break;end if ((v355==(0 + 0)) or ((4610 -(45 + 1078))>(4863 -(171 + 103)))) then v205=v78[v85[5 -(9 -7)]];v206=nil;v355=1;end end end if (((986 -(681 + 304))==v314) or ((1247 + 3583)<3318)) then v204=1 + 0;break;end end break;end end end if ((v204==(1375 -(893 + 481))) or (3515<=(1087 -(1350 -(591 + 134))))) then local v315=(923 -(507 + 416)) -0;local v316;while true do if (((1437 + 2086)>351) and (v315==(0 -0))) then v316=0 -0;while true do if (((911 + 3714)>(46 + (74 -34))) and ((0 -0)==v316)) then local v356=0 -0;while true do if ((v356==(0 -0)) or ((1255 -838)>=4335)) then v207={};v206=v9({},{__index=function(v386,v387)local v392=0 + 0;local v393;local v394;while true do if (((1302 + 2350)>(5 + 56 + 481)) and (v392==0)) then v393=0 -0;v394=nil;v392=664 -((1498 -902) + 67);end if (((2927 + 600)==(9968 -6441)) and (v392==1)) then while true do if ((v393==(0 + 0)) or (((970 -(58 + 160)) + 1221)==(1988 -760))) then local v419=1616 -(187 + 1429);while true do if (((3188 -(115 + 48))>=102) and (v419==(0 + 0))) then v394=v207[v387];return v394[1][v394[2 -0]];end end end end break;end end end,__newindex=function(v388,v389,v390)local v395=876 -(307 + 569);local v396;local v397;while true do if ((v395==1) or ((4312 -(231 + 316))==1449)) then while true do if (((2598 -1322)>=(6 + 634)) and ((0 -0)==v396)) then v397=v207[v389];v397[1984 -(1024 + 959)][v397[521 -(6 + 513)]]=v390;break;end end break;end if (((6968 -4522)>(739 + 1129)) and (v395==(0 + (0 -0)))) then local v410=0 + 0;while true do if (((272 + 464)<((3159 + 4420) -4776)) and (v410==((1278 -(1215 + 63)) -0))) then v396=0 + 0;v397=nil;v410=1452 -(1134 + (1405 -(567 + 521)));end if ((((3118 -(1595 + 217)) -(926 + 379))==v410) or (((2275 -(344 + 231)) -(464 + 104))>4793)) then v395=1 + 0;break;end end end end end});v356=1;end if ((v356==1) or ((3813 -(273 + 478))<=(11307 -8383))) then v316=263 -(164 + 98);break;end end end if ((558==(1930 -1372)) and (v316==(815 -(533 + 281)))) then v204=2 + 0;break;end end break;end end end if (((3065 -(126 + 61))>(302 + 568)) and (v204==(4 -2))) then for v329=2 -1,v85[1 + 3] do local v330=0 -0;local v331;local v332;while true do if (((5803 -(82 + 799))>(1403 + 1650)) and (((928 -532) -(331 + 65))==v330)) then v331=0 -(1162 -(821 + 341));v332=nil;v330=3 -2;end if (((1 + 0)==v330) or (288>1630)) then while true do if ((v331==1) or ((1769 -(68 + 225))>(7017 -4092))) then if ((v332[179 -(91 + 36 + 51)]==(73 -58)) or ((3155 -(288 + 1131))==(5797 -2901))) then v207[v329-(1 -0)]={v83,v332[3 + 0]};else v207[v329-1]={v35,v332[14 -(5 + 6)]};end v82[ #v82 + ((1 + 1) -1)]=v207;break;end if ((v331==0) or ((4509 -(901 + 487))<(1419 + 846))) then local v365=0;while true do if ((v365==(376 -(307 + 69))) or ((5468 -(596 + 1256))<=(2273 + 52))) then v71=v71 + (3 -2);v332=v77[v71];v365=1 + 0;end if (((1545 -(1410 + 134))==v365) or ((350 + 669)>(6937 -4213))) then v331=1;break;end end end end break;end end end v83[v85[(2654 -(203 + 929)) -((332 -(111 + 151)) + 1450)]]=v28(v205,v206,v36);break;end end break;end if ((v203==(0 -0)) or ((1911 + 470)<=119)) then v204=1375 -(416 + 264 + 695);v205=nil;v203=1;end end break;end if ((4309>=(1084 + 448)) and (v202==(1 + 0))) then v205=nil;v206=nil;v202=1312 -(416 + 894);end if ((v202==(0 + 0)) or ((621 + 942 + 667)<=(631 + 1289))) then v203=0;v204=nil;v202=4 -3;end end end elseif ((2313==(2260 + 53)) and (v86<=(1292 -(580 + 677)))) then if ((2300<=(3060 -(4 + 43))) and (v86<=32)) then if ((3064<=(2833 + 1373)) and (v86>31)) then local v151=0 + 0;local v152;local v153;while true do if (((5588 -1859)>=15) and (v151==(0 -0))) then v152=0;v153=nil;v151=1 + 0;end if (((3174 + 1639)>=(1316 -(748 + 299))) and (v151==((1 -0) + 0))) then while true do if ((v152==(0 + 0)) or ((4026 -1574)==(591 + 618))) then v153=v85[784 -(404 + 378)];v83[v153]=v83[v153](v12(v83,v153 + (2 -1),v72));break;end end break;end end else local v154=0 -0;local v155;local v156;while true do if ((v154==0) or ((2883 -(491 + 542))>(7891 -(8581 -3461)))) then local v231=0 -0;while true do if (((345 + 4605)==(2212 + 2738)) and (v231==((559 -(125 + 432)) -1))) then v154=1;break;end if (((2983 -(438 + 859))>(836 + 284)) and (v231==(0 + 0))) then v155=0 -0;v156=nil;v231=1556 -(897 + 658);end end end if ((57==((6379 -4944) -(170 + 1208))) and (v154==(1 + 0))) then while true do if ((v155==(0 -0)) or ((2273 -(404 + 101))>=((7771 -1558) -(1129 + 92)))) then v156=v85[(700 -(273 + 425)) + 0];v83[v156](v12(v83,v156 + (1 -(325 -(251 + 74))),v85[2 + 1]));break;end end break;end end end elseif ((v86<=(112 -(191 -112))) or ((6222 -2919)<(5538 -(3151 -(652 + 7))))) then v83[v85[1 + 1]]=v85[436 -(147 + 286)] * v83[v85[3 + 1]];elseif (((3348 + 848)>(4521 -(497 + 1026))) and (v86==(14 + 20))) then v83[v85[83 -((124 -92) + 49)]]=v85[1795 -(1457 + 335)];else v83[v85[2 -0]]=v35[v85[(1044 -(363 + 643)) -(4 + 31)]];end elseif (((8624 -4427)==(1493 + 224 + 2480)) and (v86<=(6 + 32))) then if (((1954 -(241 + 264))<=(2952 -(37 + 126 + 76))) and (v86<=(1 + 3 + 32))) then v83[v85[1 + 1]]=v83[v85[3]][v83[v85[(686 -(394 + 290)) + 2]]];elseif (((2119 -1486)<(6280 -4168)) and (v86>(35 + 2 + 0))) then v83[v85[3 -1]]();else local v212=0 -0;local v213;while true do if (((3905 -(682 + 412))>=1656) and (v212==((20 + 25) -(31 + 14)))) then v213=v85[5 -3];v83[v213]=v83[v213]();break;end end end elseif ((v86<=(161 -122)) or ((57 + 2574)==(169 + 847))) then local v160=0 -0;local v161;local v162;local v163;while true do if ((v160==1) or ((698 -550)>=(2260 -(549 + 38)))) then v163=nil;while true do if (((1739 -(836 + 519))<(21308 -16323)) and (v161==(0 + 0 + 0))) then v162=v85[2];v163={};v161=1;end if ((((4575 -(272 + 959)) -(314 + 468))<(7559 -4881)) and ((1 -0)==v161)) then for v270=1 + 0, #v82 do local v271=0 + 0;local v272;local v273;while true do if ((v271==((1128 -(626 + 502)) -0)) or ((16308 -11687)==(2316 + 1066))) then v272=0 -0;v273=nil;v271=1214 -(331 + 882);end if (((4126 -(308 + 440))>(6419 -4550)) and ((1 -0)==v271)) then while true do if ((v272==(0 -0)) or ((1330 + (1461 -796))>((3744 -(748 + 413)) -(111 + 56)))) then v273=v82[v270];for v345=1617 -((1831 -1190) + 976), #v273 do local v346=(1795 -1287) -(200 + 308);local v347;local v348;local v349;local v350;while true do if ((v346==(1 + 0)) or ((3489 + 1025)<(2327 + 1236))) then v349=nil;v350=nil;v346=5 -3;end if (((999 + 1372)>(428 + 1129)) and (v346==(1 + 1))) then while true do if (((1250 -767)<=1943) and (v347==0)) then local v380=685 -(438 + 247);while true do if (((3375 -(271 + 1128))>(113 + 230)) and (v380==(0 -(0 + 0)))) then v348=v273[v345];v349=v348[1 + 0 + 0];v380=636 -(79 + 556);end if (((2939 -1869)==1070) and (v380==(1602 -(1164 + 437)))) then v347=580 -(84 + 495);break;end end end if (((1414 -(157 + 680))<2550) and (v347==1)) then v350=v348[8 -6];if (((1267 + 3013)>=(857 + 1021)) and (v349==v83) and (v350>=v162)) then local v398=0;while true do if (((5739 -(705 + 255))==(3135 + 1644)) and (v398==(0 -0))) then v163[v350]=v349[v350];v348[1 + 0 + 0]=v163;break;end end end break;end end break;end if (((1643 + 2139)>(1152 + 1957)) and (v346==0)) then v347=0;v348=nil;v346=1 + 0 + 0;end end end break;end end break;end end end break;end end break;end if ((v160==(907 -(833 + 74))) or (4439>(3398 + (3309 -(1034 + 743))))) then v161=0 + 0;v162=nil;v160=1;end end elseif (((1951 -((2204 -(494 + 89)) + 119))<=((1670 + 2323) -2637)) and (v86>(93 -53))) then local v214=35 -(17 + 18);local v215;local v216;local v217;local v218;while true do if (((576 + 920)>(3083 -1796)) and (v214==((300 -(227 + 70)) -2))) then local v236=575 -(483 + 92);while true do if ((v236==(1 + 0)) or ((1605 -(1148 + 206))>(2041 -(544 + 387)))) then v214=5 -3;break;end if ((((10811 + 1075) -7254)>((3887 -1736) -(246 + 1190))) and (v236==0)) then v72=(v217 + v215) -(1819 -(1012 + (1710 -904)));v218=0;v236=1 + 0;end end end if (((315 + 962)==(2956 -1679)) and ((1 + 1)==v214)) then for v254=v215,v72 do local v255=(71 -(63 + 8)) -0;local v256;while true do if ((v255==((0 -0) -0)) or ((4834 -(927 + 540))<(1795 -(294 + 1157)))) then v256=0 -0;while true do if (((868 + 1060)>611) and (v256==(0 -(0 -0)))) then v218=v218 + 1 + 0;v83[v254]=v216[v218];break;end end break;end end end break;end if (((385 + 3026)<(3457 + 803)) and (v214==0)) then v215=v85[1548 -(135 + 1411)];v216,v217=v80(v83[v215](v12(v83,v215 + (2 -1),v85[719 -((1640 -(682 + 246)) + 4)])));v214=2 -1;end end else local v219=0 -0;local v220;while true do if (((4584 + 163)>=(1798 + 360)) and (v219==(0 + 0))) then v220=v85[1152 -(1125 + (121 -96))];v83[v220]=v83[v220](v12(v83,v220 + 1 + 0,v85[1765 -(1315 + 447)]));break;end end end v71=v71 + 1 + (772 -(610 + 162));break;end if (((2095 -(201 + 1214))<=(4137 -2120)) and (v91==(0 -0))) then local v108=0;while true do if ((v108==(1 + 0)) or ((2096 -(680 + 650))>(2468 + 35))) then v91=1 + 0;break;end if ((v108==((1922 -654) -(492 + (2795 -2019)))) or ((4812 -(271 + 1466))==(322 + 2031))) then local v110=0 + 0;while true do if ((742<=(4385 -(263 + 9))) and (v110==(569 -(298 + 249 + 21)))) then v108=1 + 0;break;end if (((126 + 331)<(1878 -(499 + 602 + 74))) and (v110==(1829 -(1543 + 286)))) then v85=v77[v71];v86=v85[2 -1];v110=1 + 0;end end end end end end break;end end break;end end end end A,B=v26(v10(v75));if  not A[1] then local v87=v34[4][v71] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)(...);end vv8(),...);end
